BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "Users" (
	"UserId"	INTEGER,
	"Login"	TEXT NOT NULL UNIQUE,
	"Password"	TEXT NOT NULL,
	"Name"	TEXT NOT NULL,
	"Company"	TEXT NOT NULL,
	"Role"	INTEGER DEFAULT 0,
	PRIMARY KEY("UserId" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "TimeEntries" (
	"EntryId"	INTEGER,
	"UserId"	INTEGER NOT NULL,
	"StartTime"	DATETIME NOT NULL,
	"EndTime"	DATETIME,
	PRIMARY KEY("EntryId" AUTOINCREMENT),
	FOREIGN KEY("UserId") REFERENCES "Users"("UserId")
);
CREATE TABLE IF NOT EXISTS "Breaks" (
	"BreakId"	INTEGER,
	"UserId"	INTEGER NOT NULL,
	"StartTime"	DATETIME NOT NULL,
	"EndTime"	DATETIME,
	PRIMARY KEY("BreakId" AUTOINCREMENT),
	FOREIGN KEY("UserId") REFERENCES "Users"("UserId")
);
CREATE TABLE IF NOT EXISTS "Projects" (
	"ProjectId"	INTEGER,
	"ProjectName"	TEXT NOT NULL,
	PRIMARY KEY("ProjectId" AUTOINCREMENT)
);
CREATE TABLE IF NOT EXISTS "Tasks" (
	"TaskId"	INTEGER,
	"TaskName"	TEXT NOT NULL,
	"ProjectId"	INTEGER NOT NULL,
	PRIMARY KEY("TaskId" AUTOINCREMENT),
	FOREIGN KEY("ProjectId") REFERENCES "Projects"("ProjectId")
);
CREATE TABLE IF NOT EXISTS "TimeTracking" (
	"TrackingId"	INTEGER,
	"UserId"	INTEGER NOT NULL,
	"TaskId"	INTEGER NOT NULL,
	"StartTime"	DATETIME NOT NULL,
	"EndTime"	DATETIME,
	PRIMARY KEY("TrackingId" AUTOINCREMENT),
	FOREIGN KEY("TaskId") REFERENCES "Tasks"("TaskId"),
	FOREIGN KEY("UserId") REFERENCES "Users"("UserId")
);
CREATE TABLE IF NOT EXISTS "Reminders" (
	"ReminderId"	INTEGER,
	"UserId"	INTEGER NOT NULL,
	"ReminderType"	TEXT NOT NULL,
	"ReminderTime"	DATETIME NOT NULL,
	PRIMARY KEY("ReminderId" AUTOINCREMENT),
	FOREIGN KEY("UserId") REFERENCES "Users"("UserId")
);
CREATE TABLE IF NOT EXISTS "CalendarEvents" (
	"EventId"	INTEGER,
	"UserId"	INTEGER NOT NULL,
	"EventName"	TEXT NOT NULL,
	"EventDateTime"	DATETIME NOT NULL,
	PRIMARY KEY("EventId" AUTOINCREMENT),
	FOREIGN KEY("UserId") REFERENCES "Users"("UserId")
);
COMMIT;
